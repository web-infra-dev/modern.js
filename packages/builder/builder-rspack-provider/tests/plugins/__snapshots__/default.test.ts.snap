// Vitest Snapshot v1

exports[`applyDefaultPlugins > should apply default plugins correctly 1`] = `
{
  "builtins": {
    "define": {
      "process.env.NODE_ENV": "\\"development\\"",
    },
    "minify": false,
    "progress": {
      "prefix": "Client",
    },
    "react": {
      "development": true,
      "refresh": true,
      "runtime": "automatic",
    },
  },
  "cache": {
    "buildDependencies": [
      "<ROOT>/package.json",
      "<ROOT>/tsconfig.json",
    ],
    "cacheDirectory": "<ROOT>/node_modules/.cache/rspack",
    "name": "web-development",
    "type": "filesystem",
  },
  "context": "<ROOT>",
  "devServer": {
    "hot": true,
  },
  "devtool": "cheap-module-source-map",
  "infrastructureLogging": {
    "level": "error",
  },
  "mode": "development",
  "module": {
    "rules": [
      {
        "generator": {
          "filename": "static/font/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 10000,
          },
        },
        "test": /\\\\\\.\\(woff\\|woff2\\|eot\\|ttf\\|otf\\|ttc\\)\\$/i,
        "type": "asset",
      },
      {
        "resourceQuery": /inline/,
        "test": /\\\\\\.\\(woff\\|woff2\\|eot\\|ttf\\|otf\\|ttc\\)\\$/i,
        "type": "asset/inline",
      },
      {
        "generator": {
          "filename": "static/font/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 0,
          },
        },
        "resourceQuery": /\\(__inline=false\\|url\\)/,
        "test": /\\\\\\.\\(woff\\|woff2\\|eot\\|ttf\\|otf\\|ttc\\)\\$/i,
        "type": "asset",
      },
      {
        "generator": {
          "filename": "static/image/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 10000,
          },
        },
        "test": /\\\\\\.\\(png\\|jpg\\|jpeg\\|gif\\|bmp\\|webp\\|ico\\|apng\\|avif\\|tiff\\)\\$/i,
        "type": "asset",
      },
      {
        "resourceQuery": /inline/,
        "test": /\\\\\\.\\(png\\|jpg\\|jpeg\\|gif\\|bmp\\|webp\\|ico\\|apng\\|avif\\|tiff\\)\\$/i,
        "type": "asset/inline",
      },
      {
        "generator": {
          "filename": "static/image/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 0,
          },
        },
        "resourceQuery": /\\(__inline=false\\|url\\)/,
        "test": /\\\\\\.\\(png\\|jpg\\|jpeg\\|gif\\|bmp\\|webp\\|ico\\|apng\\|avif\\|tiff\\)\\$/i,
        "type": "asset",
      },
      {
        "generator": {
          "filename": "static/media/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 10000,
          },
        },
        "test": /\\\\\\.\\(mp4\\|webm\\|ogg\\|mp3\\|wav\\|flac\\|aac\\|mov\\)\\$/i,
        "type": "asset",
      },
      {
        "resourceQuery": /inline/,
        "test": /\\\\\\.\\(mp4\\|webm\\|ogg\\|mp3\\|wav\\|flac\\|aac\\|mov\\)\\$/i,
        "type": "asset/inline",
      },
      {
        "generator": {
          "filename": "static/media/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 0,
          },
        },
        "resourceQuery": /\\(__inline=false\\|url\\)/,
        "test": /\\\\\\.\\(mp4\\|webm\\|ogg\\|mp3\\|wav\\|flac\\|aac\\|mov\\)\\$/i,
        "type": "asset",
      },
      {
        "test": /\\\\\\.css\\$/,
        "type": "css",
        "use": [
          {
            "loader": "<WORKSPACE>/node_modules/<PNPM_INNER>/@rspack/postcss-loader/src/index.js",
            "options": {
              "modules": {
                "auto": true,
                "generateScopedName": "[path][name]__[local]--[hash:base64:5]",
                "localsConvention": "camelCase",
              },
              "postcssOptions": {
                "plugins": [
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  {
                    "browsers": [
                      "> 0.01%",
                      "not dead",
                      "not op_mini all",
                    ],
                    "info": [Function],
                    "options": {
                      "flexbox": "no-2009",
                      "overrideBrowserslist": [
                        "> 0.01%",
                        "not dead",
                        "not op_mini all",
                      ],
                    },
                    "postcssPlugin": "autoprefixer",
                    "prepare": [Function],
                  },
                ],
              },
              "sourceMap": true,
            },
          },
        ],
      },
      {
        "test": /\\\\\\.less\\$/,
        "type": "css",
        "use": [
          {
            "loader": "<WORKSPACE>/node_modules/<PNPM_INNER>/@rspack/postcss-loader/src/index.js",
            "options": {
              "modules": {
                "auto": true,
                "generateScopedName": "[path][name]__[local]--[hash:base64:5]",
                "localsConvention": "camelCase",
              },
              "postcssOptions": {
                "plugins": [
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  {
                    "browsers": [
                      "> 0.01%",
                      "not dead",
                      "not op_mini all",
                    ],
                    "info": [Function],
                    "options": {
                      "flexbox": "no-2009",
                      "overrideBrowserslist": [
                        "> 0.01%",
                        "not dead",
                        "not op_mini all",
                      ],
                    },
                    "postcssPlugin": "autoprefixer",
                    "prepare": [Function],
                  },
                ],
              },
              "sourceMap": true,
            },
          },
          {
            "loader": "<ROOT>/compiled/@rspack/less-loader",
            "options": {
              "implementation": "<ROOT>/compiled/less",
              "lessOptions": {
                "javascriptEnabled": true,
              },
              "sourceMap": true,
            },
          },
        ],
      },
      {
        "test": /\\\\\\.s\\(a\\|c\\)ss\\$/,
        "type": "css",
        "use": [
          {
            "loader": "<WORKSPACE>/node_modules/<PNPM_INNER>/@rspack/postcss-loader/src/index.js",
            "options": {
              "modules": {
                "auto": true,
                "generateScopedName": "[path][name]__[local]--[hash:base64:5]",
                "localsConvention": "camelCase",
              },
              "postcssOptions": {
                "plugins": [
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  {
                    "browsers": [
                      "> 0.01%",
                      "not dead",
                      "not op_mini all",
                    ],
                    "info": [Function],
                    "options": {
                      "flexbox": "no-2009",
                      "overrideBrowserslist": [
                        "> 0.01%",
                        "not dead",
                        "not op_mini all",
                      ],
                    },
                    "postcssPlugin": "autoprefixer",
                    "prepare": [Function],
                  },
                ],
              },
              "sourceMap": true,
            },
          },
          {
            "builtinLoader": "sass-loader",
            "options": {
              "rspackImporter": true,
              "sourceMap": true,
            },
          },
        ],
      },
      {
        "test": /\\\\\\.toml\\$/,
        "type": "javascript/auto",
        "use": [
          {
            "loader": "<WORKSPACE>/packages/builder/builder/compiled/toml-loader",
          },
        ],
      },
      {
        "test": /\\\\\\.ya\\?ml\\$/,
        "type": "javascript/auto",
        "use": [
          {
            "loader": "<WORKSPACE>/packages/builder/builder/compiled/yaml-loader",
          },
        ],
      },
    ],
  },
  "optimization": {
    "minimize": false,
    "runtimeChunk": {
      "name": "builder-runtime",
    },
    "splitChunks": {
      "cacheGroups": {
        "lib-antd": {
          "name": "lib-antd",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]antd\\[\\\\\\\\/\\]/,
        },
        "lib-arco": {
          "name": "lib-arco",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]arco-design\\[\\\\\\\\/\\]/,
        },
        "lib-lodash": {
          "name": "lib-lodash",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]lodash\\|lodash-es\\[\\\\\\\\/\\]/,
        },
        "lib-polyfill": {
          "name": "lib-polyfill",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]core-js\\|@babel\\\\/runtime\\[\\\\\\\\/\\]/,
        },
        "lib-react": {
          "name": "lib-react",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]react\\|react-dom\\[\\\\\\\\/\\]/,
        },
        "lib-router": {
          "name": "lib-router",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]react-router\\|react-router-dom\\|history\\[\\\\\\\\/\\]/,
        },
      },
      "chunks": "all",
      "enforceSizeThreshold": 50000,
      "maxAsyncSize": undefined,
      "maxInitialSize": undefined,
      "maxSize": undefined,
      "minRemainingSize": undefined,
      "minSize": undefined,
      "minSizeReduction": undefined,
    },
  },
  "output": {
    "chunkFilename": "static/js/async/[name].js",
    "cssChunkFilename": "static/css/async/[name].css",
    "cssFilename": "static/css/[name].css",
    "filename": "static/js/[name].js",
    "hashFunction": "xxhash64",
    "path": "<ROOT>/dist",
    "publicPath": "/",
  },
  "resolve": {
    "alias": {},
    "extensions": [
      ".ts",
      ".tsx",
      ".js",
      ".jsx",
      ".mjs",
      ".json",
    ],
    "tsConfigPath": "<ROOT>/tsconfig.json",
  },
  "target": [
    "web",
    "es5",
  ],
}
`;

exports[`applyDefaultPlugins > should apply default plugins correctly when prod 1`] = `
{
  "builtins": {
    "define": {
      "process.env.NODE_ENV": "\\"production\\"",
    },
    "minify": {},
    "progress": {
      "prefix": "Client",
    },
    "react": {
      "development": false,
      "refresh": false,
      "runtime": "automatic",
    },
  },
  "cache": {
    "buildDependencies": [
      "<ROOT>/package.json",
      "<ROOT>/tsconfig.json",
    ],
    "cacheDirectory": "<ROOT>/node_modules/.cache/rspack",
    "name": "web-production",
    "type": "filesystem",
  },
  "context": "<ROOT>",
  "devServer": {
    "hot": false,
  },
  "devtool": "hidden-source-map",
  "infrastructureLogging": {
    "level": "error",
  },
  "mode": "production",
  "module": {
    "rules": [
      {
        "generator": {
          "filename": "static/font/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 10000,
          },
        },
        "test": /\\\\\\.\\(woff\\|woff2\\|eot\\|ttf\\|otf\\|ttc\\)\\$/i,
        "type": "asset",
      },
      {
        "resourceQuery": /inline/,
        "test": /\\\\\\.\\(woff\\|woff2\\|eot\\|ttf\\|otf\\|ttc\\)\\$/i,
        "type": "asset/inline",
      },
      {
        "generator": {
          "filename": "static/font/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 0,
          },
        },
        "resourceQuery": /\\(__inline=false\\|url\\)/,
        "test": /\\\\\\.\\(woff\\|woff2\\|eot\\|ttf\\|otf\\|ttc\\)\\$/i,
        "type": "asset",
      },
      {
        "generator": {
          "filename": "static/image/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 10000,
          },
        },
        "test": /\\\\\\.\\(png\\|jpg\\|jpeg\\|gif\\|bmp\\|webp\\|ico\\|apng\\|avif\\|tiff\\)\\$/i,
        "type": "asset",
      },
      {
        "resourceQuery": /inline/,
        "test": /\\\\\\.\\(png\\|jpg\\|jpeg\\|gif\\|bmp\\|webp\\|ico\\|apng\\|avif\\|tiff\\)\\$/i,
        "type": "asset/inline",
      },
      {
        "generator": {
          "filename": "static/image/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 0,
          },
        },
        "resourceQuery": /\\(__inline=false\\|url\\)/,
        "test": /\\\\\\.\\(png\\|jpg\\|jpeg\\|gif\\|bmp\\|webp\\|ico\\|apng\\|avif\\|tiff\\)\\$/i,
        "type": "asset",
      },
      {
        "generator": {
          "filename": "static/media/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 10000,
          },
        },
        "test": /\\\\\\.\\(mp4\\|webm\\|ogg\\|mp3\\|wav\\|flac\\|aac\\|mov\\)\\$/i,
        "type": "asset",
      },
      {
        "resourceQuery": /inline/,
        "test": /\\\\\\.\\(mp4\\|webm\\|ogg\\|mp3\\|wav\\|flac\\|aac\\|mov\\)\\$/i,
        "type": "asset/inline",
      },
      {
        "generator": {
          "filename": "static/media/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 0,
          },
        },
        "resourceQuery": /\\(__inline=false\\|url\\)/,
        "test": /\\\\\\.\\(mp4\\|webm\\|ogg\\|mp3\\|wav\\|flac\\|aac\\|mov\\)\\$/i,
        "type": "asset",
      },
      {
        "test": /\\\\\\.css\\$/,
        "type": "css",
        "use": [
          {
            "loader": "<WORKSPACE>/node_modules/<PNPM_INNER>/@rspack/postcss-loader/src/index.js",
            "options": {
              "modules": {
                "auto": true,
                "generateScopedName": "[hash:base64:5]",
                "localsConvention": "camelCase",
              },
              "postcssOptions": {
                "plugins": [
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  {
                    "browsers": [
                      "> 0.01%",
                      "not dead",
                      "not op_mini all",
                    ],
                    "info": [Function],
                    "options": {
                      "flexbox": "no-2009",
                      "overrideBrowserslist": [
                        "> 0.01%",
                        "not dead",
                        "not op_mini all",
                      ],
                    },
                    "postcssPlugin": "autoprefixer",
                    "prepare": [Function],
                  },
                ],
              },
              "sourceMap": false,
            },
          },
        ],
      },
      {
        "test": /\\\\\\.less\\$/,
        "type": "css",
        "use": [
          {
            "loader": "<WORKSPACE>/node_modules/<PNPM_INNER>/@rspack/postcss-loader/src/index.js",
            "options": {
              "modules": {
                "auto": true,
                "generateScopedName": "[hash:base64:5]",
                "localsConvention": "camelCase",
              },
              "postcssOptions": {
                "plugins": [
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  {
                    "browsers": [
                      "> 0.01%",
                      "not dead",
                      "not op_mini all",
                    ],
                    "info": [Function],
                    "options": {
                      "flexbox": "no-2009",
                      "overrideBrowserslist": [
                        "> 0.01%",
                        "not dead",
                        "not op_mini all",
                      ],
                    },
                    "postcssPlugin": "autoprefixer",
                    "prepare": [Function],
                  },
                ],
              },
              "sourceMap": false,
            },
          },
          {
            "loader": "<ROOT>/compiled/@rspack/less-loader",
            "options": {
              "implementation": "<ROOT>/compiled/less",
              "lessOptions": {
                "javascriptEnabled": true,
              },
              "sourceMap": false,
            },
          },
        ],
      },
      {
        "test": /\\\\\\.s\\(a\\|c\\)ss\\$/,
        "type": "css",
        "use": [
          {
            "loader": "<WORKSPACE>/node_modules/<PNPM_INNER>/@rspack/postcss-loader/src/index.js",
            "options": {
              "modules": {
                "auto": true,
                "generateScopedName": "[hash:base64:5]",
                "localsConvention": "camelCase",
              },
              "postcssOptions": {
                "plugins": [
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  {
                    "browsers": [
                      "> 0.01%",
                      "not dead",
                      "not op_mini all",
                    ],
                    "info": [Function],
                    "options": {
                      "flexbox": "no-2009",
                      "overrideBrowserslist": [
                        "> 0.01%",
                        "not dead",
                        "not op_mini all",
                      ],
                    },
                    "postcssPlugin": "autoprefixer",
                    "prepare": [Function],
                  },
                ],
              },
              "sourceMap": false,
            },
          },
          {
            "builtinLoader": "sass-loader",
            "options": {
              "rspackImporter": true,
              "sourceMap": false,
            },
          },
        ],
      },
      {
        "test": /\\\\\\.toml\\$/,
        "type": "javascript/auto",
        "use": [
          {
            "loader": "<WORKSPACE>/packages/builder/builder/compiled/toml-loader",
          },
        ],
      },
      {
        "test": /\\\\\\.ya\\?ml\\$/,
        "type": "javascript/auto",
        "use": [
          {
            "loader": "<WORKSPACE>/packages/builder/builder/compiled/yaml-loader",
          },
        ],
      },
    ],
  },
  "optimization": {
    "minimize": true,
    "runtimeChunk": {
      "name": "builder-runtime",
    },
    "splitChunks": {
      "cacheGroups": {
        "lib-antd": {
          "name": "lib-antd",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]antd\\[\\\\\\\\/\\]/,
        },
        "lib-arco": {
          "name": "lib-arco",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]arco-design\\[\\\\\\\\/\\]/,
        },
        "lib-lodash": {
          "name": "lib-lodash",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]lodash\\|lodash-es\\[\\\\\\\\/\\]/,
        },
        "lib-polyfill": {
          "name": "lib-polyfill",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]core-js\\|@babel\\\\/runtime\\[\\\\\\\\/\\]/,
        },
        "lib-react": {
          "name": "lib-react",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]react\\|react-dom\\[\\\\\\\\/\\]/,
        },
        "lib-router": {
          "name": "lib-router",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]react-router\\|react-router-dom\\|history\\[\\\\\\\\/\\]/,
        },
      },
      "chunks": "all",
      "enforceSizeThreshold": 50000,
      "maxAsyncSize": undefined,
      "maxInitialSize": undefined,
      "maxSize": undefined,
      "minRemainingSize": undefined,
      "minSize": undefined,
      "minSizeReduction": undefined,
    },
  },
  "output": {
    "chunkFilename": "static/js/async/[name].[contenthash:8].js",
    "cssChunkFilename": "static/css/async/[name].[contenthash:8].css",
    "cssFilename": "static/css/[name].[contenthash:8].css",
    "filename": "static/js/[name].[contenthash:8].js",
    "hashFunction": "xxhash64",
    "path": "<ROOT>/dist",
    "publicPath": "/",
  },
  "resolve": {
    "alias": {},
    "extensions": [
      ".ts",
      ".tsx",
      ".js",
      ".jsx",
      ".mjs",
      ".json",
    ],
    "tsConfigPath": "<ROOT>/tsconfig.json",
  },
  "target": [
    "web",
    "es5",
  ],
}
`;

exports[`tools.rspack > should match snapshot 1`] = `
{
  "builtins": {
    "define": {
      "process.env.NODE_ENV": "\\"development\\"",
    },
    "minify": false,
    "progress": {
      "prefix": "Client",
    },
    "react": {
      "development": true,
      "refresh": true,
      "runtime": "automatic",
    },
  },
  "cache": {
    "buildDependencies": [
      "<ROOT>/package.json",
      "<ROOT>/tsconfig.json",
    ],
    "cacheDirectory": "<ROOT>/node_modules/.cache/rspack",
    "name": "web-development",
    "type": "filesystem",
  },
  "context": "<ROOT>",
  "devServer": {
    "hot": true,
  },
  "devtool": "cheap-module-source-map",
  "infrastructureLogging": {
    "level": "error",
  },
  "mode": "development",
  "module": {
    "rules": [
      {
        "test": /\\\\\\.test\\$/,
        "use": [
          {
            "builtinLoader": "sass-loader",
          },
        ],
      },
      {
        "generator": {
          "filename": "static/font/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 10000,
          },
        },
        "test": /\\\\\\.\\(woff\\|woff2\\|eot\\|ttf\\|otf\\|ttc\\)\\$/i,
        "type": "asset",
      },
      {
        "resourceQuery": /inline/,
        "test": /\\\\\\.\\(woff\\|woff2\\|eot\\|ttf\\|otf\\|ttc\\)\\$/i,
        "type": "asset/inline",
      },
      {
        "generator": {
          "filename": "static/font/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 0,
          },
        },
        "resourceQuery": /\\(__inline=false\\|url\\)/,
        "test": /\\\\\\.\\(woff\\|woff2\\|eot\\|ttf\\|otf\\|ttc\\)\\$/i,
        "type": "asset",
      },
      {
        "generator": {
          "filename": "static/image/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 10000,
          },
        },
        "test": /\\\\\\.\\(png\\|jpg\\|jpeg\\|gif\\|bmp\\|webp\\|ico\\|apng\\|avif\\|tiff\\)\\$/i,
        "type": "asset",
      },
      {
        "resourceQuery": /inline/,
        "test": /\\\\\\.\\(png\\|jpg\\|jpeg\\|gif\\|bmp\\|webp\\|ico\\|apng\\|avif\\|tiff\\)\\$/i,
        "type": "asset/inline",
      },
      {
        "generator": {
          "filename": "static/image/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 0,
          },
        },
        "resourceQuery": /\\(__inline=false\\|url\\)/,
        "test": /\\\\\\.\\(png\\|jpg\\|jpeg\\|gif\\|bmp\\|webp\\|ico\\|apng\\|avif\\|tiff\\)\\$/i,
        "type": "asset",
      },
      {
        "generator": {
          "filename": "static/media/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 10000,
          },
        },
        "test": /\\\\\\.\\(mp4\\|webm\\|ogg\\|mp3\\|wav\\|flac\\|aac\\|mov\\)\\$/i,
        "type": "asset",
      },
      {
        "resourceQuery": /inline/,
        "test": /\\\\\\.\\(mp4\\|webm\\|ogg\\|mp3\\|wav\\|flac\\|aac\\|mov\\)\\$/i,
        "type": "asset/inline",
      },
      {
        "generator": {
          "filename": "static/media/[name].[contenthash:8][ext]",
        },
        "parser": {
          "dataUrlCondition": {
            "maxSize": 0,
          },
        },
        "resourceQuery": /\\(__inline=false\\|url\\)/,
        "test": /\\\\\\.\\(mp4\\|webm\\|ogg\\|mp3\\|wav\\|flac\\|aac\\|mov\\)\\$/i,
        "type": "asset",
      },
      {
        "test": /\\\\\\.css\\$/,
        "type": "css",
        "use": [
          {
            "loader": "<WORKSPACE>/node_modules/<PNPM_INNER>/@rspack/postcss-loader/src/index.js",
            "options": {
              "modules": {
                "auto": true,
                "generateScopedName": "[path][name]__[local]--[hash:base64:5]",
                "localsConvention": "camelCase",
              },
              "postcssOptions": {
                "plugins": [
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  {
                    "browsers": [
                      "> 0.01%",
                      "not dead",
                      "not op_mini all",
                    ],
                    "info": [Function],
                    "options": {
                      "flexbox": "no-2009",
                      "overrideBrowserslist": [
                        "> 0.01%",
                        "not dead",
                        "not op_mini all",
                      ],
                    },
                    "postcssPlugin": "autoprefixer",
                    "prepare": [Function],
                  },
                ],
              },
              "sourceMap": true,
            },
          },
        ],
      },
      {
        "test": /\\\\\\.less\\$/,
        "type": "css",
        "use": [
          {
            "loader": "<WORKSPACE>/node_modules/<PNPM_INNER>/@rspack/postcss-loader/src/index.js",
            "options": {
              "modules": {
                "auto": true,
                "generateScopedName": "[path][name]__[local]--[hash:base64:5]",
                "localsConvention": "camelCase",
              },
              "postcssOptions": {
                "plugins": [
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  {
                    "browsers": [
                      "> 0.01%",
                      "not dead",
                      "not op_mini all",
                    ],
                    "info": [Function],
                    "options": {
                      "flexbox": "no-2009",
                      "overrideBrowserslist": [
                        "> 0.01%",
                        "not dead",
                        "not op_mini all",
                      ],
                    },
                    "postcssPlugin": "autoprefixer",
                    "prepare": [Function],
                  },
                ],
              },
              "sourceMap": true,
            },
          },
          {
            "loader": "<ROOT>/compiled/@rspack/less-loader",
            "options": {
              "implementation": "<ROOT>/compiled/less",
              "lessOptions": {
                "javascriptEnabled": true,
              },
              "sourceMap": true,
            },
          },
        ],
      },
      {
        "test": /\\\\\\.s\\(a\\|c\\)ss\\$/,
        "type": "css",
        "use": [
          {
            "loader": "<WORKSPACE>/node_modules/<PNPM_INNER>/@rspack/postcss-loader/src/index.js",
            "options": {
              "modules": {
                "auto": true,
                "generateScopedName": "[path][name]__[local]--[hash:base64:5]",
                "localsConvention": "camelCase",
              },
              "postcssOptions": {
                "plugins": [
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  {
                    "browsers": [
                      "> 0.01%",
                      "not dead",
                      "not op_mini all",
                    ],
                    "info": [Function],
                    "options": {
                      "flexbox": "no-2009",
                      "overrideBrowserslist": [
                        "> 0.01%",
                        "not dead",
                        "not op_mini all",
                      ],
                    },
                    "postcssPlugin": "autoprefixer",
                    "prepare": [Function],
                  },
                ],
              },
              "sourceMap": true,
            },
          },
          {
            "builtinLoader": "sass-loader",
            "options": {
              "rspackImporter": true,
              "sourceMap": true,
            },
          },
        ],
      },
      {
        "test": /\\\\\\.toml\\$/,
        "type": "javascript/auto",
        "use": [
          {
            "loader": "<WORKSPACE>/packages/builder/builder/compiled/toml-loader",
          },
        ],
      },
      {
        "test": /\\\\\\.ya\\?ml\\$/,
        "type": "javascript/auto",
        "use": [
          {
            "loader": "<WORKSPACE>/packages/builder/builder/compiled/yaml-loader",
          },
        ],
      },
    ],
  },
  "optimization": {
    "minimize": false,
    "runtimeChunk": {
      "name": "builder-runtime",
    },
    "splitChunks": {
      "cacheGroups": {
        "lib-antd": {
          "name": "lib-antd",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]antd\\[\\\\\\\\/\\]/,
        },
        "lib-arco": {
          "name": "lib-arco",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]arco-design\\[\\\\\\\\/\\]/,
        },
        "lib-lodash": {
          "name": "lib-lodash",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]lodash\\|lodash-es\\[\\\\\\\\/\\]/,
        },
        "lib-polyfill": {
          "name": "lib-polyfill",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]core-js\\|@babel\\\\/runtime\\[\\\\\\\\/\\]/,
        },
        "lib-react": {
          "name": "lib-react",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]react\\|react-dom\\[\\\\\\\\/\\]/,
        },
        "lib-router": {
          "name": "lib-router",
          "priority": 0,
          "reuseExistingChunk": true,
          "test": /\\[\\\\\\\\/\\]react-router\\|react-router-dom\\|history\\[\\\\\\\\/\\]/,
        },
      },
      "chunks": "all",
      "enforceSizeThreshold": 50000,
      "maxAsyncSize": undefined,
      "maxInitialSize": undefined,
      "maxSize": undefined,
      "minRemainingSize": undefined,
      "minSize": undefined,
      "minSizeReduction": undefined,
    },
  },
  "output": {
    "chunkFilename": "static/js/async/[name].js",
    "cssChunkFilename": "static/css/async/[name].css",
    "cssFilename": "static/css/[name].css",
    "filename": "static/js/[name].js",
    "hashFunction": "xxhash64",
    "path": "<ROOT>/dist",
    "publicPath": "/",
  },
  "plugins": [
    TestPlugin {
      "name": "TestPlugin",
    },
  ],
  "resolve": {
    "alias": {},
    "extensions": [
      ".ts",
      ".tsx",
      ".js",
      ".jsx",
      ".mjs",
      ".json",
    ],
    "tsConfigPath": "<ROOT>/tsconfig.json",
  },
  "target": [
    "web",
    "es5",
  ],
}
`;
