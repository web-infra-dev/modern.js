// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`plugins/swc > should apply source.include and source.exclude correctly 1`] = `
{
  "module": {
    "rules": [
      {
        "exclude": [
          /bar/,
        ],
        "include": [
          {
            "and": [
              "<ROOT>",
              {
                "not": /node_modules/,
              },
            ],
          },
          /foo/,
        ],
        "test": /\\\\\\.\\(js\\|mjs\\|cjs\\|jsx\\)\\$\\|\\\\\\.\\(ts\\|mts\\|cts\\|tsx\\)\\$/,
        "use": [
          {
            "loader": "<ROOT>/src/loader",
            "options": {
              "cwd": "<ROOT>",
              "env": {
                "coreJs": "3.32",
                "mode": "entry",
                "targets": [
                  "> 0.01%",
                  "not dead",
                  "not op_mini all",
                ],
              },
              "extensions": {
                "lockCorejsVersion": {
                  "corejs": "<WORKSPACE>/node_modules/<PNPM_INNER>/core-js",
                  "swcHelpers": "<WORKSPACE>/node_modules/<PNPM_INNER>/@swc/helpers",
                },
                "lodash": {
                  "cwd": "<ROOT>",
                  "ids": [
                    "lodash",
                    "lodash-es",
                  ],
                },
                "styledComponents": {
                  "displayName": true,
                  "pure": false,
                  "ssr": false,
                  "transpileTemplateLiterals": true,
                },
              },
              "inlineSourcesContent": true,
              "jsc": {
                "externalHelpers": true,
                "parser": {
                  "decorators": true,
                  "syntax": "typescript",
                  "tsx": true,
                },
                "preserveAllComments": true,
                "transform": {
                  "react": {
                    "refresh": true,
                    "runtime": "automatic",
                  },
                },
              },
              "minify": false,
              "sourceMaps": true,
            },
          },
        ],
      },
      {
        "mimetype": {
          "or": [
            "text/javascript",
            "application/javascript",
          ],
        },
        "use": [
          {
            "loader": "<ROOT>/src/loader",
            "options": {
              "cwd": "<ROOT>",
              "env": {
                "coreJs": "3.32",
                "mode": "entry",
                "targets": [
                  "> 0.01%",
                  "not dead",
                  "not op_mini all",
                ],
              },
              "extensions": {
                "lockCorejsVersion": {
                  "corejs": "<WORKSPACE>/node_modules/<PNPM_INNER>/core-js",
                  "swcHelpers": "<WORKSPACE>/node_modules/<PNPM_INNER>/@swc/helpers",
                },
                "lodash": {
                  "cwd": "<ROOT>",
                  "ids": [
                    "lodash",
                    "lodash-es",
                  ],
                },
                "styledComponents": {
                  "displayName": true,
                  "pure": false,
                  "ssr": false,
                  "transpileTemplateLiterals": true,
                },
              },
              "inlineSourcesContent": true,
              "jsc": {
                "externalHelpers": true,
                "parser": {
                  "decorators": true,
                  "syntax": "typescript",
                  "tsx": true,
                },
                "preserveAllComments": true,
                "transform": {
                  "react": {
                    "refresh": true,
                    "runtime": "automatic",
                  },
                },
              },
              "minify": false,
              "sourceMaps": true,
            },
          },
        ],
      },
    ],
  },
}
`;

exports[`plugins/swc > should disable react refresh when dev.hmr is false 1`] = `
{
  "rules": [
    {
      "test": /\\\\\\.\\(js\\|mjs\\|cjs\\|jsx\\)\\$\\|\\\\\\.\\(ts\\|mts\\|cts\\|tsx\\)\\$/,
      "use": [
        {
          "loader": "<ROOT>/src/loader",
          "options": {
            "cwd": "<ROOT>",
            "env": {
              "coreJs": "3.32",
              "mode": "entry",
              "targets": [
                "> 0.01%",
                "not dead",
                "not op_mini all",
              ],
            },
            "extensions": {
              "lockCorejsVersion": {
                "corejs": "<WORKSPACE>/node_modules/<PNPM_INNER>/core-js",
                "swcHelpers": "<WORKSPACE>/node_modules/<PNPM_INNER>/@swc/helpers",
              },
              "lodash": {
                "cwd": "<ROOT>",
                "ids": [
                  "lodash",
                  "lodash-es",
                ],
              },
              "styledComponents": {
                "displayName": true,
                "pure": false,
                "ssr": false,
                "transpileTemplateLiterals": true,
              },
            },
            "inlineSourcesContent": true,
            "jsc": {
              "externalHelpers": true,
              "parser": {
                "decorators": true,
                "syntax": "typescript",
                "tsx": true,
              },
              "preserveAllComments": true,
              "transform": {
                "react": {
                  "refresh": false,
                  "runtime": "automatic",
                },
              },
            },
            "minify": false,
            "sourceMaps": true,
          },
        },
      ],
    },
  ],
}
`;

exports[`plugins/swc > should disable react refresh when target is not web 1`] = `
{
  "rules": [
    {
      "test": /\\\\\\.\\(js\\|mjs\\|cjs\\|jsx\\)\\$\\|\\\\\\.\\(ts\\|mts\\|cts\\|tsx\\)\\$/,
      "use": [
        {
          "loader": "<ROOT>/src/loader",
          "options": {
            "cwd": "<ROOT>",
            "env": {
              "coreJs": "3.32",
              "mode": "entry",
              "targets": [
                "chrome >= 61",
                "edge >= 16",
                "firefox >= 60",
                "safari >= 11",
                "ios_saf >= 11",
              ],
            },
            "extensions": {
              "lockCorejsVersion": {
                "corejs": "<WORKSPACE>/node_modules/<PNPM_INNER>/core-js",
                "swcHelpers": "<WORKSPACE>/node_modules/<PNPM_INNER>/@swc/helpers",
              },
              "lodash": {
                "cwd": "<ROOT>",
                "ids": [
                  "lodash",
                  "lodash-es",
                ],
              },
              "styledComponents": {
                "displayName": true,
                "pure": false,
                "ssr": false,
                "transpileTemplateLiterals": true,
              },
            },
            "inlineSourcesContent": true,
            "jsc": {
              "externalHelpers": true,
              "parser": {
                "decorators": true,
                "syntax": "typescript",
                "tsx": true,
              },
              "preserveAllComments": true,
              "transform": {
                "react": {
                  "refresh": true,
                  "runtime": "automatic",
                },
              },
            },
            "minify": false,
            "sourceMaps": true,
          },
        },
      ],
    },
  ],
}
`;

exports[`plugins/swc > should disable react refresh when target is not web 2`] = `
{
  "rules": [
    {
      "test": /\\\\\\.\\(js\\|mjs\\|cjs\\|jsx\\)\\$\\|\\\\\\.\\(ts\\|mts\\|cts\\|tsx\\)\\$/,
      "use": [
        {
          "loader": "<ROOT>/src/loader",
          "options": {
            "cwd": "<ROOT>",
            "env": {
              "coreJs": "3.32",
              "mode": "entry",
              "targets": [
                "node >= 14",
              ],
            },
            "extensions": {
              "lockCorejsVersion": {
                "corejs": "<WORKSPACE>/node_modules/<PNPM_INNER>/core-js",
                "swcHelpers": "<WORKSPACE>/node_modules/<PNPM_INNER>/@swc/helpers",
              },
              "lodash": {
                "cwd": "<ROOT>",
                "ids": [
                  "lodash",
                  "lodash-es",
                ],
              },
              "styledComponents": {
                "displayName": true,
                "pure": false,
                "ssr": true,
                "transpileTemplateLiterals": true,
              },
            },
            "inlineSourcesContent": true,
            "jsc": {
              "externalHelpers": true,
              "parser": {
                "decorators": true,
                "syntax": "typescript",
                "tsx": true,
              },
              "preserveAllComments": true,
              "transform": {
                "react": {
                  "refresh": false,
                  "runtime": "automatic",
                },
              },
            },
            "minify": false,
            "sourceMaps": true,
          },
        },
      ],
    },
  ],
}
`;

exports[`plugins/swc > should disable react refresh when target is not web 3`] = `
{
  "rules": [
    {
      "test": /\\\\\\.\\(js\\|mjs\\|cjs\\|jsx\\)\\$\\|\\\\\\.\\(ts\\|mts\\|cts\\|tsx\\)\\$/,
      "use": [
        {
          "loader": "<ROOT>/src/loader",
          "options": {
            "cwd": "<ROOT>",
            "env": {
              "coreJs": "3.32",
              "mode": "entry",
              "targets": [
                "> 0.01%",
                "not dead",
                "not op_mini all",
              ],
            },
            "extensions": {
              "lockCorejsVersion": {
                "corejs": "<WORKSPACE>/node_modules/<PNPM_INNER>/core-js",
                "swcHelpers": "<WORKSPACE>/node_modules/<PNPM_INNER>/@swc/helpers",
              },
              "lodash": {
                "cwd": "<ROOT>",
                "ids": [
                  "lodash",
                  "lodash-es",
                ],
              },
              "styledComponents": {
                "displayName": true,
                "pure": false,
                "ssr": false,
                "transpileTemplateLiterals": true,
              },
            },
            "inlineSourcesContent": true,
            "jsc": {
              "externalHelpers": true,
              "parser": {
                "decorators": true,
                "syntax": "typescript",
                "tsx": true,
              },
              "preserveAllComments": true,
              "transform": {
                "react": {
                  "refresh": false,
                  "runtime": "automatic",
                },
              },
            },
            "minify": false,
            "sourceMaps": true,
          },
        },
      ],
    },
  ],
}
`;

exports[`plugins/swc > should disable react refresh when target is not web 4`] = `
{
  "rules": [
    {
      "test": /\\\\\\.\\(js\\|mjs\\|cjs\\|jsx\\)\\$\\|\\\\\\.\\(ts\\|mts\\|cts\\|tsx\\)\\$/,
      "use": [
        {
          "loader": "<ROOT>/src/loader",
          "options": {
            "cwd": "<ROOT>",
            "env": {
              "coreJs": "3.32",
              "mode": "entry",
              "targets": [
                "> 0.01%",
                "not dead",
                "not op_mini all",
              ],
            },
            "extensions": {
              "lockCorejsVersion": {
                "corejs": "<WORKSPACE>/node_modules/<PNPM_INNER>/core-js",
                "swcHelpers": "<WORKSPACE>/node_modules/<PNPM_INNER>/@swc/helpers",
              },
              "lodash": {
                "cwd": "<ROOT>",
                "ids": [
                  "lodash",
                  "lodash-es",
                ],
              },
              "styledComponents": {
                "displayName": true,
                "pure": false,
                "ssr": false,
                "transpileTemplateLiterals": true,
              },
            },
            "inlineSourcesContent": true,
            "jsc": {
              "externalHelpers": true,
              "parser": {
                "decorators": true,
                "syntax": "typescript",
                "tsx": true,
              },
              "preserveAllComments": true,
              "transform": {
                "react": {
                  "refresh": true,
                  "runtime": "automatic",
                },
              },
            },
            "minify": false,
            "sourceMaps": true,
          },
        },
      ],
    },
  ],
}
`;

exports[`plugins/swc > should disable react refresh when target is not web 5`] = `
{
  "rules": [
    {
      "test": /\\\\\\.\\(js\\|mjs\\|cjs\\|jsx\\)\\$\\|\\\\\\.\\(ts\\|mts\\|cts\\|tsx\\)\\$/,
      "use": [
        {
          "loader": "<ROOT>/src/loader",
          "options": {
            "cwd": "<ROOT>",
            "env": {
              "coreJs": "3.32",
              "mode": "entry",
              "targets": [
                "> 0.01%",
                "not dead",
                "not op_mini all",
              ],
            },
            "extensions": {
              "lockCorejsVersion": {
                "corejs": "<WORKSPACE>/node_modules/<PNPM_INNER>/core-js",
                "swcHelpers": "<WORKSPACE>/node_modules/<PNPM_INNER>/@swc/helpers",
              },
              "lodash": {
                "cwd": "<ROOT>",
                "ids": [
                  "lodash",
                  "lodash-es",
                ],
              },
              "styledComponents": {
                "displayName": true,
                "pure": false,
                "ssr": false,
                "transpileTemplateLiterals": true,
              },
            },
            "inlineSourcesContent": true,
            "jsc": {
              "externalHelpers": true,
              "parser": {
                "decorators": true,
                "syntax": "typescript",
                "tsx": true,
              },
              "preserveAllComments": true,
              "transform": {
                "react": {
                  "refresh": false,
                  "runtime": "automatic",
                },
              },
            },
            "minify": false,
            "sourceMaps": true,
          },
        },
      ],
    },
  ],
}
`;

exports[`plugins/swc > should set correct swc minimizer options in production 1`] = `
{
  "minimizer": [
    SwcMinimizerPlugin {
      "minifyOptions": {
        "cssMinify": {},
        "jsMinify": {
          "compress": false,
          "mangle": false,
        },
      },
      "name": "swc-minimizer-plugin",
    },
  ],
}
`;

exports[`plugins/swc > should set correct swc minimizer options using raw swc config 1`] = `
{
  "minimizer": [
    SwcMinimizerPlugin {
      "minifyOptions": {
        "cssMinify": {},
        "jsMinify": {
          "compress": false,
          "mangle": false,
        },
      },
      "name": "swc-minimizer-plugin",
    },
  ],
}
`;

exports[`plugins/swc > should set multiple swc-loader 1`] = `
[
  {
    "include": [
      {
        "and": [
          "<ROOT>",
          {
            "not": /node_modules/,
          },
        ],
      },
    ],
    "test": /\\\\\\.\\(js\\|mjs\\|cjs\\|jsx\\)\\$\\|\\\\\\.\\(ts\\|mts\\|cts\\|tsx\\)\\$/,
    "use": [
      {
        "loader": "<ROOT>/src/loader",
        "options": {
          "cwd": "<ROOT>",
          "env": {
            "coreJs": "3.32",
            "mode": "entry",
            "targets": [
              "> 0.01%",
              "not dead",
              "not op_mini all",
            ],
          },
          "extensions": {
            "lockCorejsVersion": {
              "corejs": "<WORKSPACE>/node_modules/<PNPM_INNER>/core-js",
              "swcHelpers": "<WORKSPACE>/node_modules/<PNPM_INNER>/@swc/helpers",
            },
            "lodash": {
              "cwd": "<ROOT>",
              "ids": [
                "lodash",
                "lodash-es",
              ],
            },
            "styledComponents": {
              "displayName": true,
              "pure": false,
              "ssr": false,
              "transpileTemplateLiterals": true,
            },
          },
          "inlineSourcesContent": true,
          "jsc": {
            "externalHelpers": true,
            "parser": {
              "decorators": true,
              "syntax": "typescript",
              "tsx": true,
            },
            "preserveAllComments": true,
            "transform": {
              "react": {
                "refresh": true,
                "runtime": "automatic",
              },
              "useDefineForClassFields": true,
            },
          },
          "minify": false,
          "sourceMaps": true,
        },
      },
    ],
  },
  {
    "mimetype": {
      "or": [
        "text/javascript",
        "application/javascript",
      ],
    },
    "use": [
      {
        "loader": "<ROOT>/src/loader",
        "options": {
          "cwd": "<ROOT>",
          "env": {
            "coreJs": "3.32",
            "mode": "entry",
            "targets": [
              "> 0.01%",
              "not dead",
              "not op_mini all",
            ],
          },
          "extensions": {
            "lockCorejsVersion": {
              "corejs": "<WORKSPACE>/node_modules/<PNPM_INNER>/core-js",
              "swcHelpers": "<WORKSPACE>/node_modules/<PNPM_INNER>/@swc/helpers",
            },
            "lodash": {
              "cwd": "<ROOT>",
              "ids": [
                "lodash",
                "lodash-es",
              ],
            },
            "styledComponents": {
              "displayName": true,
              "pure": false,
              "ssr": false,
              "transpileTemplateLiterals": true,
            },
          },
          "inlineSourcesContent": true,
          "jsc": {
            "externalHelpers": true,
            "parser": {
              "decorators": true,
              "syntax": "typescript",
              "tsx": true,
            },
            "preserveAllComments": true,
            "transform": {
              "react": {
                "refresh": true,
                "runtime": "automatic",
              },
              "useDefineForClassFields": true,
            },
          },
          "minify": false,
          "sourceMaps": true,
        },
      },
    ],
  },
  {
    "test": /override\\.ts/,
    "use": [
      {
        "loader": "<ROOT>/src/loader",
        "options": {
          "cwd": "<ROOT>",
          "env": {
            "coreJs": "3.32",
            "mode": "entry",
            "targets": [
              "> 0.01%",
              "not dead",
              "not op_mini all",
            ],
          },
          "extensions": {
            "lockCorejsVersion": {
              "corejs": "<WORKSPACE>/node_modules/<PNPM_INNER>/core-js",
              "swcHelpers": "<WORKSPACE>/node_modules/<PNPM_INNER>/@swc/helpers",
            },
            "lodash": {
              "cwd": "<ROOT>",
              "ids": [
                "lodash",
                "lodash-es",
              ],
            },
            "styledComponents": {
              "displayName": true,
              "pure": false,
              "ssr": false,
              "transpileTemplateLiterals": true,
            },
          },
          "inlineSourcesContent": true,
          "jsc": {
            "externalHelpers": true,
            "parser": {
              "decorators": true,
              "syntax": "typescript",
              "tsx": true,
            },
            "preserveAllComments": true,
            "transform": {
              "react": {
                "refresh": true,
                "runtime": "automatic",
              },
              "useDefineForClassFields": false,
            },
          },
          "minify": false,
          "sourceMaps": true,
        },
      },
    ],
  },
]
`;

exports[`plugins/swc > should set swc minimizer in production 1`] = `
{
  "minimizer": [
    SwcMinimizerPlugin {
      "minifyOptions": {
        "cssMinify": {},
        "jsMinify": {
          "compress": {},
          "mangle": true,
        },
      },
      "name": "swc-minimizer-plugin",
    },
  ],
}
`;

exports[`plugins/swc > should set swc-loader 1`] = `
{
  "module": {
    "rules": [
      {
        "include": [
          {
            "and": [
              "<ROOT>",
              {
                "not": /node_modules/,
              },
            ],
          },
        ],
        "test": /\\\\\\.\\(js\\|mjs\\|cjs\\|jsx\\)\\$\\|\\\\\\.\\(ts\\|mts\\|cts\\|tsx\\)\\$/,
        "use": [
          {
            "loader": "<ROOT>/src/loader",
            "options": {
              "cwd": "<ROOT>",
              "env": {
                "coreJs": "3.32",
                "mode": "entry",
                "targets": [
                  "> 0.01%",
                  "not dead",
                  "not op_mini all",
                ],
              },
              "extensions": {
                "lockCorejsVersion": {
                  "corejs": "<WORKSPACE>/node_modules/<PNPM_INNER>/core-js",
                  "swcHelpers": "<WORKSPACE>/node_modules/<PNPM_INNER>/@swc/helpers",
                },
                "lodash": {
                  "cwd": "<ROOT>",
                  "ids": [
                    "lodash",
                    "lodash-es",
                  ],
                },
                "styledComponents": {
                  "displayName": true,
                  "pure": false,
                  "ssr": false,
                  "transpileTemplateLiterals": true,
                },
              },
              "inlineSourcesContent": true,
              "jsc": {
                "externalHelpers": true,
                "parser": {
                  "decorators": true,
                  "syntax": "typescript",
                  "tsx": true,
                },
                "preserveAllComments": true,
                "transform": {
                  "react": {
                    "refresh": true,
                    "runtime": "automatic",
                  },
                },
              },
              "minify": false,
              "sourceMaps": true,
            },
          },
        ],
      },
      {
        "mimetype": {
          "or": [
            "text/javascript",
            "application/javascript",
          ],
        },
        "use": [
          {
            "loader": "<ROOT>/src/loader",
            "options": {
              "cwd": "<ROOT>",
              "env": {
                "coreJs": "3.32",
                "mode": "entry",
                "targets": [
                  "> 0.01%",
                  "not dead",
                  "not op_mini all",
                ],
              },
              "extensions": {
                "lockCorejsVersion": {
                  "corejs": "<WORKSPACE>/node_modules/<PNPM_INNER>/core-js",
                  "swcHelpers": "<WORKSPACE>/node_modules/<PNPM_INNER>/@swc/helpers",
                },
                "lodash": {
                  "cwd": "<ROOT>",
                  "ids": [
                    "lodash",
                    "lodash-es",
                  ],
                },
                "styledComponents": {
                  "displayName": true,
                  "pure": false,
                  "ssr": false,
                  "transpileTemplateLiterals": true,
                },
              },
              "inlineSourcesContent": true,
              "jsc": {
                "externalHelpers": true,
                "parser": {
                  "decorators": true,
                  "syntax": "typescript",
                  "tsx": true,
                },
                "preserveAllComments": true,
                "transform": {
                  "react": {
                    "refresh": true,
                    "runtime": "automatic",
                  },
                },
              },
              "minify": false,
              "sourceMaps": true,
            },
          },
        ],
      },
    ],
  },
}
`;
