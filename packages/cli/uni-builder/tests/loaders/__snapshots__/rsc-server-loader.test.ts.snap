// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`rscServerLoader > should handle inline actions correctly 1`] = `
"/* @modern-js-rsc-metadata
{\\"directive\\":null,\\"exportNames\\":[{\\"exportName\\":\\"foo\\"},{\\"exportName\\":\\"baz\\"},{\\"exportName\\":\\"qux\\"},{\\"exportName\\":\\"default\\"}]}*/ import { registerServerReference } from \\"@modern-js/runtime/rsc/server\\";
import { z } from 'zod';
console.log('zod', z);
export async function foo() {
    'use server';
    return \`foo\`;
}
registerServerReference(foo, module.id, \\"foo\\");
export async function bar() {
    return qux();
}
const b = ()=>{
    'use server';
    return \`baz\`;
};
registerServerReference(b, module.id, \\"baz\\");
export { b as baz };
async function qux() {
    'use server';
    return \`qux\`;
}
registerServerReference(qux, module.id, \\"qux\\");
export default function $$ACTION_0() {
    'use server';
    return \`default\`;
}
registerServerReference($$ACTION_0, module.id, \\"default\\");
"
`;

exports[`rscServerLoader > should handle server module correctly 1`] = `
"/* @modern-js-rsc-metadata
{\\"directive\\":\\"server\\",\\"exportNames\\":[{\\"exportName\\":\\"foo\\"},{\\"exportName\\":\\"bar\\"},{\\"exportName\\":\\"b\\"},{\\"exportName\\":\\"default\\"}]}*/ 'use server';
import { registerServerReference } from \\"@modern-js/runtime/rsc/server\\";
export async function foo() {
    return 'foo';
}
registerServerReference(foo, module.id, \\"foo\\");
export const bar = async ()=>'bar';
registerServerReference(bar, module.id, \\"bar\\");
const baz = async ()=>'baz';
registerServerReference(baz, module.id, \\"b\\");
export { baz as b };
export const qux = 'qux';
async function qoo() {
    return 'qoo';
}
registerServerReference(qoo, module.id, \\"default\\");
export default qoo;
"
`;

exports[`rscServerLoader > support use client directive 1`] = `
"/* @modern-js-rsc-metadata
{\\"directive\\":\\"client\\",\\"exportNames\\":[{\\"exportName\\":\\"ClassA\\",\\"id\\":\\"fixtures/client-component.jsx#ClassA\\"},{\\"exportName\\":\\"ComponentA\\",\\"id\\":\\"fixtures/client-component.jsx#ComponentA\\"},{\\"exportName\\":\\"MemoizedComponentA\\",\\"id\\":\\"fixtures/client-component.jsx#MemoizedComponentA\\"},{\\"exportName\\":\\"ComponentB\\",\\"id\\":\\"fixtures/client-component.jsx#ComponentB\\"},{\\"exportName\\":\\"foo\\",\\"id\\":\\"fixtures/client-component.jsx#foo\\"},{\\"exportName\\":\\"ComponentC\\",\\"id\\":\\"fixtures/client-component.jsx#ComponentC\\"},{\\"exportName\\":\\"ComponentD\\",\\"id\\":\\"fixtures/client-component.jsx#ComponentD\\"},{\\"exportName\\":\\"bar\\",\\"id\\":\\"fixtures/client-component.jsx#bar\\"},{\\"exportName\\":\\"ComponentE\\",\\"id\\":\\"fixtures/client-component.jsx#ComponentE\\"},{\\"exportName\\":\\"ComponentF\\",\\"id\\":\\"fixtures/client-component.jsx#ComponentF\\"},{\\"exportName\\":\\"default\\",\\"id\\":\\"fixtures/client-component.jsx#default\\"}]}*/ \\"use client\\";
import { registerClientReference } from \\"@modern-js/runtime/rsc/server\\";
function createClientReferenceProxy(exportName) {
    const filename = \\"fixtures/client-component.jsx\\";
    return ()=>{
        throw new Error(\`Attempted to call \${exportName}() from the server of \${filename} but \${exportName} is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\`);
    };
}
export const ClassA = registerClientReference(createClientReferenceProxy(\\"ClassA\\"), \\"fixtures/client-component.jsx#ClassA\\", \\"ClassA\\");
export const ComponentA = registerClientReference(createClientReferenceProxy(\\"ComponentA\\"), \\"fixtures/client-component.jsx#ComponentA\\", \\"ComponentA\\");
export const MemoizedComponentA = registerClientReference(createClientReferenceProxy(\\"MemoizedComponentA\\"), \\"fixtures/client-component.jsx#MemoizedComponentA\\", \\"MemoizedComponentA\\");
export const ComponentB = registerClientReference(createClientReferenceProxy(\\"ComponentB\\"), \\"fixtures/client-component.jsx#ComponentB\\", \\"ComponentB\\");
export const foo = registerClientReference(createClientReferenceProxy(\\"foo\\"), \\"fixtures/client-component.jsx#foo\\", \\"foo\\");
export const ComponentC = registerClientReference(createClientReferenceProxy(\\"ComponentC\\"), \\"fixtures/client-component.jsx#ComponentC\\", \\"ComponentC\\");
export const ComponentD = registerClientReference(createClientReferenceProxy(\\"ComponentD\\"), \\"fixtures/client-component.jsx#ComponentD\\", \\"ComponentD\\");
export const bar = registerClientReference(createClientReferenceProxy(\\"bar\\"), \\"fixtures/client-component.jsx#bar\\", \\"bar\\");
export const ComponentE = registerClientReference(createClientReferenceProxy(\\"ComponentE\\"), \\"fixtures/client-component.jsx#ComponentE\\", \\"ComponentE\\");
export const ComponentF = registerClientReference(createClientReferenceProxy(\\"ComponentF\\"), \\"fixtures/client-component.jsx#ComponentF\\", \\"ComponentF\\");
export default registerClientReference(createClientReferenceProxy(\\"default\\"), \\"fixtures/client-component.jsx#default\\", \\"default\\");
"
`;
